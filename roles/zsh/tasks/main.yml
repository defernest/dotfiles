---
- name: Install zsh
  apt: name=zsh state=latest
  become: yes
  register: zsh_install

- name: Sets zsh as default shell for my user | command
  become: yes
  command: chsh -s /bin/zsh {{ lookup('env','USER') }}
  when: zsh_install is success
  register: zsh_for_user
  failed_when: zsh_for_user.rc >= 1
  changed_when: zsh_for_user.rc == 0

- name: Checks for oh-my-zsh installation | stat
  stat:
    path: ~/.oh-my-zsh
  register: oh_my_zsh_stat

- name: Installs oh-my-zsh | raw
  raw: 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"'
  when: not oh_my_zsh_stat.stat.exists

- name: Backing up existing ~/.zshrc
  shell: 
    cmd: cp ~/.zshrc ~/.zshrc.bac
    removes: ~/.zshrc
    creates: ~/.zshrc.bac
  register: zshrc_bac
  when: zsh_install.failed == false

- name: Rm old ~/.zshrc
  file:
    path: ~/.zshrc
    state: absent
  when: zsh_install.failed == false

- name: Link .zshrc
  file:
    src: "{{role_path}}/files/zshrc"
    dest: ~/.zshrc
    state: link

- name: Backing up existing ~/.zshenv
  shell: 
    cmd: cp ~/.zshenv ~/.zshenv.bac
    removes: ~/.zshenv
    creates: ~/.zshenv.bac
  register: zshenv_bac
  when: zsh_install.failed == false

- name: Rm old ~/.zshenv
  file:
    path: ~/.zshenv
    state: absent
  when: zsh_install.failed == false

- name: Link .zshenv
  file:
    src: "{{role_path}}/files/zshenv"
    dest: ~/.zshenv
    state: link

